{"data":{"deck":{"id":"04f1086c-cfdd-5a71-ad12-f79a6dca0120","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar theme = themes.future;\nvar _frontmatter = {};\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"React Testing @ Pie Insurance\"), mdx(\"hr\", null), mdx(\"h2\", null, \"By the numbers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"23 React Repositories\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Over 800 files tested (components, pages, redux, utils, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Over 9000 tests across the front end space\")), mdx(\"img\", {\n    src: overNine,\n    width: \"25%\",\n    height: \"auto\",\n    style: {\n      width: '400px',\n      height: 'auto'\n    }\n  }), mdx(\"hr\", null), mdx(\"h2\", null, \"Tools We Are Talking About Today\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jest\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"React Testing Library\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Why Jest?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CLI test control\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Isolated and parallel\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mocking support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Snapshot testing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Built-in Code Coverage\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Why React Testing Library?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Light utility functions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Helps resemble the way your software is used\")), mdx(\"hr\", null), mdx(\"img\", {\n    src: tdd\n  }), mdx(\"hr\", null), mdx(CodeSurfer, {\n    theme: nightOwl,\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// Checkbox/Checkbox.text.tsx\\nimport { render } from \\\"@testing-library/react\\\";\\n\\nconst checkboxLabel = \\\"Do you know the muffin man?\\\";\\n\\ndescribe(\\\"Checkbox\\\", () => {\\n  it(\\\"should render the label for the checkbox\\\", () => {\\n    const { queryByLabelText } = render(\\n        <Checkbox label={checkboxLabel} />\\n    );\\n\\n    expect(queryByLabelText(checkboxLabel)).toBeTruthy();\\n  });\\n});\\n\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"SHOW CODE TOGGLE TEST\"), mdx(\"hr\", null), mdx(\"h2\", null, \"SHOW CODE WITH CODE TOGGLE\"), mdx(\"hr\", null), mdx(\"h1\", null, \"TEST\"), mdx(\"hr\", null), mdx(\"h2\", null, \"WHERE TO GO NEXT\"), mdx(\"hr\", null), mdx(\"h2\", null, \"THANKS\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","title":"React Testing @ Pie Insurance"}},"pageContext":{"matchPath":"/*","id":"04f1086c-cfdd-5a71-ad12-f79a6dca0120","slug":"/react-testing-talk","title":"React Testing @ Pie Insurance"}}